<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HeBianGu.Base.WpfBase</name>
    </assembly>
    <members>
        <member name="T:HeBianGu.Base.WpfBase.ControlAttachEvent">
            <summary> 依赖事件 </summary>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.ControlAttachProperty">
            <summary> 公共附加属性 </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.ControlAttachProperty.SetMouseOverBorderBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            Sets the brush used to draw the mouse over brush.
            </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.ControlAttachProperty.GetMouseOverBorderBrush(System.Windows.DependencyObject)">
            <summary>
            Gets the brush used to draw the mouse over brush.
            </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.ControlAttachProperty.AttachContentProperty">
            <summary>
            附加组件模板
            </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.ControlAttachProperty.WatermarkProperty">
            <summary>
            水印
            </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.ControlAttachProperty.FIconProperty">
            <summary>
            字体图标
            </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.ControlAttachProperty.FIconSizeProperty">
            <summary>
            字体图标
            </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.ControlAttachProperty.FIconMarginProperty">
            <summary>
            字体图标
            </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.ControlAttachProperty.AllowsAnimationProperty">
            <summary>
            启用旋转动画
            </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.ControlAttachProperty.RotateAnimation">
            <summary>
            旋转动画刻度
            </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.ControlAttachProperty.AllowsAnimationChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            绑定动画事件
            </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.ControlAttachProperty.CornerRadiusProperty">
            <summary>
            Border圆角
            </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.ControlAttachProperty.LabelProperty">
            <summary>
            TextBox的头部Label
            </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.ControlAttachProperty.LabelTemplateProperty">
            <summary>
            TextBox的头部Label模板
            </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.ControlAttachProperty.IsClearTextButtonBehaviorEnabledProperty">
            <summary>
            清除输入框Text值按钮行为开关
            </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.ControlAttachProperty.IsClearTextButtonBehaviorEnabledChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            绑定清除Text操作的按钮事件
            </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.ControlAttachProperty.DetailProperty">
            <summary>
            详细信息
            </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.ControlAttachProperty.IsOpenFileButtonBehaviorEnabledProperty">
            <summary>
            选择文件命令行为开关
            </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.ControlAttachProperty.IsOpenFolderButtonBehaviorEnabledProperty">
            <summary>
            选择文件夹命令行为开关
            </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.ControlAttachProperty.IsSaveFileButtonBehaviorEnabledProperty">
            <summary>
            选择文件保存路径及名称
            </summary>
        </member>
        <member name="P:HeBianGu.Base.WpfBase.ControlAttachProperty.ClearTextCommand">
            <summary>
            清除输入框Text事件命令，需要使用IsClearTextButtonBehaviorEnabledChanged绑定命令
            </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.ControlAttachProperty.ClearTextCommandBinding">
            <summary>
            ClearTextCommand绑定事件
            </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.ControlAttachProperty.ClearButtonClick(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            清除输入框文本值
            </summary>
        </member>
        <member name="P:HeBianGu.Base.WpfBase.ControlAttachProperty.OpenFileCommand">
            <summary>
            选择文件命令，需要使用IsClearTextButtonBehaviorEnabledChanged绑定命令
            </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.ControlAttachProperty.OpenFileCommandBinding">
            <summary>
            OpenFileCommand绑定事件
            </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.ControlAttachProperty.OpenFileButtonClick(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            执行OpenFileCommand
            </summary>
        </member>
        <member name="P:HeBianGu.Base.WpfBase.ControlAttachProperty.OpenFolderCommand">
            <summary>
            选择文件夹命令
            </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.ControlAttachProperty.OpenFolderCommandBinding">
            <summary>
            OpenFolderCommand绑定事件
            </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.ControlAttachProperty.OpenFolderButtonClick(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            执行OpenFolderCommand
            </summary>
        </member>
        <member name="P:HeBianGu.Base.WpfBase.ControlAttachProperty.SaveFileCommand">
            <summary>
            选择文件保存路径及名称
            </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.ControlAttachProperty.SaveFileCommandBinding">
            <summary>
            SaveFileCommand绑定事件
            </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.ControlAttachProperty.SaveFileButtonClick(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            执行OpenFileCommand
            </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.ControlAttachProperty.#cctor">
            <summary>
            静态构造函数
            </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.ControlAttachProperty.IsBuzyProperty">
            <summary> 是否等待 </summary>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.RelayCommand">
            <summary> 带参数的命令 </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.RelayCommand.#ctor(System.Action{System.Object})">
            <summary> 执行命令 </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.RelayCommand.#ctor(System.Action{System.Object},System.Predicate{System.Object})">
            <summary> 执行命令 </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.RelayCommand.CanExecute(System.Object)">
            <summary> 命令是否可执行 </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.RelayCommand.Refresh">
            <summary> 刷新命令可执行状态 (会调用CanExecute方法) </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.RelayCommand.Execute(System.Object)">
            <summary> 执行命令 </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.RelayCommand.op_Implicit(System.Action{System.Object})~HeBianGu.Base.WpfBase.RelayCommand">
            <summary> 隐式转换 </summary>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.RelayCommand`1">
            <summary>
            广播命令：基本ICommand实现接口，带参数
            </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.RelayCommand`1.Execute(System.Object)">
            <summary>
            定义在调用此命令时调用的方法。
            </summary>
            <param name="parameter">此命令使用的数据。如果此命令不需要传递数据，则该对象可以设置为 null。</param>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.RelayCommand`1.CanExecute(System.Object)">
            <summary>
            定义用于确定此命令是否可以在其当前状态下执行的方法。
            </summary>
            <returns>
            如果可以执行此命令，则为 true；否则为 false。
            </returns>
            <param name="parameter">此命令使用的数据。如果此命令不需要传递数据，则该对象可以设置为 null。</param>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.VisibilityConverter">
            <summary> 布尔转不可用 </summary>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.FalseToVisibilityConverter">
            <summary> 布尔为true转不可用 </summary>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.VisibilityEmptyConverter">
            <summary> 空文本不可用 </summary>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.VisibilityStringConverter">
            <summary> 匹配文本本不可用 </summary>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.LevelToColorConverter">
            <summary> 警告级别转换 </summary>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.IconConverter">
            <summary> 绑定图标转换 </summary>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.ColorToBrushConverter">
            <summary> 绑定图标转换 </summary>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.BackgroundToForegroundConverter">
            <summary> 根据背景色获取前景色。当然也可反着用 </summary>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.PercentToAngleConverter">
            <summary> 百分比转换为角度值 </summary>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.ThicknessToDoubleConverter">
            <summary>
            获取Thickness固定值double
            </summary>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.TrueToFalseConverter">
            <summary>
            这是一个颠倒黑白的世界
            </summary>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.TrueToFalseMultiConverter">
            <summary>
            这是一个颠倒黑白的世界 其中有一个为true则反馈false
            </summary>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.PressedSizeConverter">
            <summary> 按下 </summary>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.MouseOverSizeConverter">
            <summary> 鼠标在上面 </summary>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.ComboBoxAutoSelectionConverter">
            <summary> 布尔转不可用 </summary>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.NotifyPropertyChanged">
            <summary> Mvvm绑定模型基类 </summary>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.Color.ThemeService">
            <summary> 主题颜色管理器 </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.Color.ThemeService.DarkThemeSource">
            <summary> 深颜色主题 </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.Color.ThemeService.LightThemeSource">
            <summary> 浅颜色主题 </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.Color.ThemeService.KeyAccentColor">
            <summary> 主颜色Key </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.Color.ThemeService.KeyAccent">
            <summary> 主颜色字段 </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.Color.ThemeService.KeyDefaultFontSize">
            <summary> 默认大小 </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.Color.ThemeService.KeyFixedFontSize">
            <summary> 固定字体 </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.Color.ThemeService.GetThemeDictionary">
            <summary> 获取第一个带有WindowBackground的资源字典作为主题 </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.Color.ThemeService.GetThemeSource">
            <summary> 获取主题地址 </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.Color.ThemeService.SetThemeSource(System.Uri,System.Boolean)">
            <summary> 设置主题 </summary>
        </member>
        <member name="P:HeBianGu.Base.WpfBase.Color.ThemeService.DarkThemeCommand">
            <summary>
            The command that sets the dark theme.
            </summary>
        </member>
        <member name="P:HeBianGu.Base.WpfBase.Color.ThemeService.LightThemeCommand">
            <summary>
            The command that sets the light color theme.
            </summary>
        </member>
        <member name="P:HeBianGu.Base.WpfBase.Color.ThemeService.SetThemeCommand">
            <summary>
            The command that sets a custom theme.
            </summary>
        </member>
        <member name="P:HeBianGu.Base.WpfBase.Color.ThemeService.LargeFontSizeCommand">
            <summary>
            The command that sets the large font size.
            </summary>
        </member>
        <member name="P:HeBianGu.Base.WpfBase.Color.ThemeService.SmallFontSizeCommand">
            <summary>
            The command that sets the small font size.
            </summary>
        </member>
        <member name="P:HeBianGu.Base.WpfBase.Color.ThemeService.AccentColorCommand">
            <summary>
            The command that sets the accent color.
            </summary>
        </member>
        <member name="P:HeBianGu.Base.WpfBase.Color.ThemeService.ThemeSource">
            <summary> 主题地址 </summary>
        </member>
        <member name="P:HeBianGu.Base.WpfBase.Color.ThemeService.FontSize">
            <summary> 字体大小 </summary>
        </member>
        <member name="P:HeBianGu.Base.WpfBase.Color.ThemeService.AccentColor">
            <summary> 主色调 </summary>
        </member>
        <member name="P:HeBianGu.Base.WpfBase.Color.ThemeService.KeyToMarkDictionary">
            <summary> 描述资源的信息 </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.Color.FontSize.Large">
            <summary>
            Large fonts.
            </summary>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.Color.FontSize.Small">
            <summary>
            Small fonts.
            </summary>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:HeBianGu.Base.WpfBase.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:HeBianGu.Base.WpfBase.Properties.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.LinkCollection">
            <summary> 连接绑定集合 </summary>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.Link">
            <summary> 连接绑定对象 </summary>
        </member>
        <member name="P:HeBianGu.Base.WpfBase.Link.Source">
            <summary> 连接地址 </summary>
        </member>
        <member name="P:HeBianGu.Base.WpfBase.Link.DisplayName">
            <summary> 显示名称 </summary>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.LinkGroup">
            <summary>
            Represents a named group of links.
            </summary>
        </member>
        <member name="P:HeBianGu.Base.WpfBase.LinkGroup.DisplayName">
            <summary> 显示名称 </summary>
        </member>
        <member name="P:HeBianGu.Base.WpfBase.LinkGroup.SelectedLink">
            <summary>
            Gets or sets the selected link in this group.
            </summary>
            <value>The selected link.</value>
        </member>
        <member name="P:HeBianGu.Base.WpfBase.LinkGroup.Links">
            <summary>
            Gets the links.
            </summary>
            <value>The links.</value>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.VisualTreeHelperEx">
            <summary>
            Provides addition visual tree helper methods.
            </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.VisualTreeHelperEx.TryGetVisualStateGroup(System.Windows.DependencyObject,System.String)">
            <summary>
            Gets specified visual state group.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <param name="groupName">Name of the group.</param>
            <returns></returns>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.VisualTreeHelperEx.GetImplementationRoot(System.Windows.DependencyObject)">
            <summary>
            Gets the implementation root.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <returns></returns>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.VisualTreeHelperEx.Ancestors(System.Windows.DependencyObject)">
            <summary>
            Returns a collection of the visual ancestor elements of specified dependency object.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <returns>
            A collection that contains the ancestors elements.
            </returns>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.VisualTreeHelperEx.AncestorsAndSelf(System.Windows.DependencyObject)">
            <summary>
            Returns a collection of visual elements that contain specified object, and the ancestors of specified object.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <returns>
            A collection that contains the ancestors elements and the object itself.
            </returns>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.VisualTreeHelperEx.GetParent(System.Windows.DependencyObject)">
            <summary>
            Gets the parent for specified dependency object.
            </summary>
            <param name="dependencyObject">The dependency object</param>
            <returns>The parent object or null if there is no parent.</returns>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.ElementExtession.BindCommand(System.Windows.UIElement,System.Windows.Input.ICommand,System.Action{System.Object,System.Windows.Input.ExecutedRoutedEventArgs})">
            <summary>
            绑定命令和命令事件到宿主UI
            </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.ElementExtession.BindCommand(System.Windows.UIElement,System.Windows.Input.ICommand)">
            <summary>
            绑定RelayCommand命令到宿主UI
            </summary>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.PrintControlTreeService">
            <summary> 视觉树逻辑树 </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.PrintControlTreeService.PrintVisualTree(System.Windows.DependencyObject)">
            <summary> 遍历视觉树 </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.PrintControlTreeService.PrintLogicalTree(System.Windows.DependencyObject)">
            <summary> 遍历逻辑树 </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.PrintControlTreeService.FindAllVisualChild``1(System.Windows.DependencyObject,System.Predicate{``0})">
            <summary> 遍历子匹配子类型 </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.StoryBoardService.FountainAnimation(System.Collections.Generic.List{System.Windows.DependencyObject},System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>  喷泉效果  </summary>
            <param name="cav">画布</param>
            <param name="uclist">展示集合</param>
            <param name="pL">喷出点左</param>
            <param name="pT">喷出点上</param>
            <param name="Mul">放大倍数</param>
            <param name="middle_value">放大时间点</param>
            <param name="end_value">还原时间点</param>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.AnimationHelpers">
            <summary>
                Encapsulates methods and properties for handling animations.
            </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.AnimationHelpers.ReverseStoryboard(System.Windows.Media.Animation.Storyboard)">
            <summary>
                Switches between the To and From properties of the each AnimationTimeline in the Storyboard.
            </summary>
            <param name="storyboard">The storyboard.</param>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.AnimationHelpers.GetReversedStoryboard(System.Windows.Media.Animation.Storyboard)">
            <summary>
                Returns a cloned Storyboard where the To and From properties of the AnimationTimeline have been switched.
            </summary>
            <param name="storyboard">The storyboard.</param>
            <returns></returns>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.AnimationHelpers.AddLinearAnimation``2(System.Windows.Media.Animation.Storyboard,System.Windows.PropertyPath,System.Nullable{``1},System.Nullable{``1},System.Windows.Duration)">
            <summary>
                Creates and adds an AnimationTimeline to a Storyboard.
            </summary>
            <typeparam name="TAnimation">The type of the animation.</typeparam>
            <typeparam name="T"></typeparam>
            <param name="storyboard">The storyboard.</param>
            <param name="path">The path.</param>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="duration">The duration.</param>
            <returns></returns>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.AnimationHelpers.AddAnimation(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.Timeline,System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
                Adds the animation to the storyboard.
            </summary>
            <param name="storyboard">The storyboard.</param>
            <param name="timeline">The timeline.</param>
            <param name="target">The target.</param>
            <param name="property">The property.</param>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.AnimationHelpers.AddAnimation(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.Timeline,System.String,System.Windows.DependencyProperty)">
            <summary>
                Adds the animation to the storyboard.
            </summary>
            <param name="storyboard">The storyboard.</param>
            <param name="timeline">The timeline.</param>
            <param name="targetName">Name of the target.</param>
            <param name="property">The property.</param>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.AnimationHelpers.AttachCompletedEventHandler(System.Windows.Media.Animation.Timeline,System.EventHandler)">
            <summary>
            Attaches the specified event handler to the <see cref="E:Timeline.Completed"/> event.
            <remarks>
            Also ensures that the reference is released upon completion.
            </remarks>
            </summary>
            <param name="timeline">The timeline.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.AnimationHelpers.AnimationCompletedHandler">
            <summary>
            Provides a closure so that allows the <see cref="E:Timeline.Completed"/> event to be disconnected.
            </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.AnimationHelpers.GetWidthPercentage(System.Windows.FrameworkElement)">
            <summary>
                Gets the width percentage.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.AnimationHelpers.SetWidthPercentage(System.Windows.FrameworkElement,System.Int32)">
            <summary>
                Sets the width percentage.
            </summary>
            <param name="obj">The obj.</param>
            <param name="value">The value.</param>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.AnimationHelpers.WidthPercentageProperty">
            <summary>
                Identifies the <c>WidthPercentage</c> attached property.
            </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.AnimationHelpers.GetHeightPercentage(System.Windows.FrameworkElement)">
            <summary>
                Gets the height percentage.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.AnimationHelpers.SetHeightPercentage(System.Windows.FrameworkElement,System.Int32)">
            <summary>
                Sets the height percentage.
            </summary>
            <param name="obj">The obj.</param>
            <param name="value">The value.</param>
        </member>
        <member name="F:HeBianGu.Base.WpfBase.AnimationHelpers.HeightPercentageProperty">
            <summary>
                Identifies the <c>HeightPercentage</c> attached property.
            </summary>
        </member>
        <member name="T:HeBianGu.Base.WpfBase.DependencyHelpers">
            <summary>
                Encapsulates methods for dealing with dependency objects and properties.
            </summary>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.DependencyHelpers.GetDependencyProperty(System.Type,System.String)">
            <summary>
                Gets the dependency property according to its name.
            </summary>
            <param name="type">The type.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:HeBianGu.Base.WpfBase.DependencyHelpers.GetDependencyProperty(System.Windows.DependencyObject,System.String)">
            <summary>
                Retrieves a <see cref="T:System.Windows.DependencyProperty" /> using reflection.
            </summary>
            <param name="o"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
    </members>
</doc>
